buildscript {
    repositories {
        mavenCentral()
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'application'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

group = 'mandelbrot'
version = '0.1'
archivesBaseName = 'fractals'
mainClassName = 'mandelbrot.Mandelbrot'

compileJava {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.apache.commons:commons-math3:3.2"
    compile "org.lwjgl.lwjgl:lwjgl:2.9.3"
    compile "org.lwjgl.lwjgl:lwjgl_util:2.9.3"
    compile "ar.com.hjg:pngj:2.1.0"
    compile files("$buildDir/natives")
}

def platforms = ['windows', 'linux', 'osx']

platforms.each { platform ->
    task "${platform}Natives" {
        def outputDir = "$buildDir/natives/$platform"
        inputs.files(configurations.compile)
        outputs.dir(outputDir)
        doLast {
            copy {
                def artifacts = configurations.compile.resolvedConfiguration.resolvedArtifacts
                        .findAll { it.classifier == "natives-$platform" }
                artifacts.each {
                    from zipTree(it.file)
                }
                into outputDir
            }
        }
    }
}

task natives {
    dependsOn platforms.collect { "${it}Natives" }.findAll { tasks[it] }
}

build.dependsOn natives